package yudinev.graph.projects.gensim;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Collection;
import java.util.Iterator;
import java.util.function.Function;

import org.apache.commons.cli.ParseException;
import org.apache.commons.collections15.Factory;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import edu.uci.ics.jung.algorithms.generators.GraphGenerator;
import edu.uci.ics.jung.graph.Graph;
import edu.uci.ics.jung.graph.UndirectedSparseGraph;
import edu.uci.ics.jung.graph.util.Pair;
import edu.uci.ics.jung.io.PajekNetReader;
import vis.AddNodeBADemo;
import vis.AddNodeStohDemo2;

/**
 * Main Class of the project
 *
 */
public class App {
	private static final Logger LOG = LogManager.getLogger(App.class.getName());

	private static ProgramParameters parameters;
	static Factory<Graph<Integer, Integer>> graphFactory = new Factory<Graph<Integer, Integer>>() {

		@Override
		public Graph<Integer, Integer> create() {
			return new UndirectedSparseGraph();
		}

	};

	public static void maint(String[] args) {
		String inputArgs = "";
		for (String string : args) {
			inputArgs += string + " ";
		}
		LOG.debug("Input arguments: " + inputArgs);
		long startTime;
		Graph<Integer, Integer> graph;
		ProgramParameters parameters = parseCmd(args);
		startTime = System.nanoTime();
		graph = initGraph(parameters.type);
		LOG.info("Elapsed time = {}.", FormatUtils.durationToHMS(System.nanoTime() - startTime));

		if (graph.getVertexCount() == 0) {
			LOG.error("Graph is empty.");
			System.exit(1);
		}
		LOG.info("Vertices = {}.", graph.getVertexCount());

		if (parameters.getVDistr() > 0) {
			int[] degrees = Statistics.getNodesDegrees(graph, parameters.getVDistr() + 1);
			System.out.println("Degree distribution");

			for (int i = 0; i < degrees.length; i++) {
				System.out.println(degrees[i]);

			}

		}
		if (parameters.getEDistr() > 0) {
			int[][] mass = Statistics.getQMatrix(graph, parameters.getEDistr());
			File degreeDegreeFile = new File("e_out.txt");
			try (FileWriter writeFile = new FileWriter(degreeDegreeFile)) {
				for (int i = 0; i < mass.length; i++) {
					for (int j = 0; j < mass.length; j++) {
						writeFile.write(String.format("%.8f", mass[i][j] / 2. / (double) graph.getEdgeCount()) + " ");
					}
					writeFile.write("\n");

				}
			} catch (IOException e) {
				LOG.error("Problem with  degree-degree file saving.");
			}
		}
		double[] resEdgeRem, resNodeRem;

		if (parameters.isNodeRemovalSimulation()) {
			System.out.println("NodeRemovalSimulation");
			resNodeRem = Statistics.percolationNode(graph, 100, 0.1, 1., 0.1);
			for (double d : resNodeRem) {
				System.out.println(d);
			}
		}
		if (parameters.isEdgeRemovalSimulation()) {
			System.out.println("EdgeRemovalSimulation");
			resEdgeRem = Statistics.percolationEdges(graph, 100, 0.1, 1., 0.1);
			for (double d : resEdgeRem) {
				System.out.println(d);
			}

		}

		// временно отладка
		System.out.println("V=" + graph.getVertexCount());
		System.out.println("E=" + graph.getEdgeCount());
		int[] tr = Statistics.getTriAndVilk2(graph);
		System.out.println("C=" + tr[0] * 3. / tr[1]);
		System.out.println("max_k=" + Statistics.getMaxDegree(graph));

	}

	/**
	 * This is a wrapper for <code>parseCmdParameters(String[])</code> method of the
	 * <code>yudinev.graph.projects.gensim.ArgumentParser</code> instance.
	 * 
	 * @author yudinev, Gleepa
	 * @param args
	 *            input arguments
	 * @see yudinev.graph.projects.gensim.ArgumentParser#parseCmdParameters(String[])
	 * @return the instance of
	 *         <codeyudinev.graph.projects.gensim.ProgramParameters</code> if input
	 *         arguments were parsed successfully, otherwise thrown exception is
	 *         logged and the program shuts down
	 */
	private static ProgramParameters parseCmd(String[] args) {
		ArgumentParser parser = new ArgumentParser();
		try {
			parameters = parser.parseCmdParameters(args);
		} catch (ParseException | NumberFormatException e) {
			LOG.error("Can't parse cmd parameters.");
			LOG.debug("Can't parse cmd parameters.", e);
			System.exit(1);
		}
		return parameters;
	}

	/**
	 * This is a wrapper for <code>loadGraph(String)</code> method.
	 * 
	 * @author yudinev, Gleepa
	 * @param type
	 * @see yudinev.graph.projects.gensim.App#loadGraph(String)
	 * @return the instance of a class which implements
	 *         <code>edu.uci.ics.jung.graph.Hypergraph</code> interface if specific
	 *         graph was loaded successfully, otherwise thrown exception is logged
	 *         and the program shuts down
	 */
	private static Graph<Integer, Integer> initGraph(GraphType type) {
		long startTime;
		Graph<Integer, Integer> graph = null;

		if (type == GraphType.AS_GRAPH) {
			startTime = System.nanoTime();
			try {
				graph = Statistics.loadGraph("graph/myAs.net");
				LOG.info("Graph successfully loaded in {}.", FormatUtils.durationToHMS(System.nanoTime() - startTime));
			} catch (IOException e) {
				LOG.error("Failed to load graph from {} file.");
				LOG.debug("Failed to load graph from {} file.", e);
				System.exit(1);
			}
		} else if (type == GraphType.NPA_GENERATOR) {
			graph = getNPAGraph(22963);
		} else if (type == GraphType.BA_GENERATOR) {
			graph = getBAGraph(22963);
		}
		return graph;
	}

	private static Graph<Integer, Integer> getBAGraph(int N) {
		Function<Integer, Double> pn2 = (Integer k) -> {
			return 1. * k;
		};
		GraphGenerator<Integer, Integer> gn = new PAGenerator(graphFactory, Statistics.createIntegerFactory(),
				Statistics.createIntegerFactory(), new double[] { 0, 0, 1. }, pn2, N);
		return gn.create();
	}

	private static Graph<Integer, Integer> getNPAGraph_EDC(int N) {
		double[] d_pn2 = { 0, 0.0221183, 2.46866E-12, 0.277132655, 0.899726387, 1.134329068, 1.630262207, 2.033397895,
				1.947201952, 2.329632034, 2.427151012, 2.472448475, 3.392274694, 4.379834025, 3.369732622, 4.216660589,
				3.992994758, 4.379801547, 4.571250078, 7.335927267, 6.677148536, 18.40378972, 11.61352794, 7.850871117,
				8.036523478, 8.303058128, 11.98964432, 20.52780576, 10.39906457, 9.901002553, 24.3701862, 10.68775231,
				12.15166636, 33.04689385, 14.12549917, 17.69214149, 9.776561389, 11.25102633, 13.57436103, 21.25982176,
				14.65075496, 20.04619589, 24.56500019, 19.12818056, 13.13583441, 12.63412303, 21.66634291, 28.3973898,
				16.49806001, 27.05715696, 19.75832484, 15.28840052, 25.03492906, 37.07420383, 73.71806924, 36.30544609,
				23.243728, 23.66866494, 24.08836329, 24.50895135, 24.92936984, 25.34980158, 25.77021489, 26.19061513,
				26.61100126, 27.03137336, 27.4517313, 27.87207501, 28.29240441, 28.71271943, 29.13301997, 29.55330598,
				29.97357737, 30.39383408, 30.81407605, 31.2343032, 31.65451547, 32.0747128, 32.49489513, 32.9150624,
				33.33521455, 33.75535152, 34.17547326, 34.59557972, 35.01567084, 35.43574656, 35.85580685, 36.27585164,
				36.69588089, 37.11589455, 37.53589258, 37.95587492, 38.37584154, 38.79579237, 39.2157274, 39.63564655,
				40.05554981, 40.47543711, 40.89530843, 41.31516372, 41.73500294, 42.15482605, 42.574633, 42.99442377,
				43.41419832, 43.8339566, 44.25369857, 44.67342421, 45.09313347, 45.51282633, 45.93250273, 46.35216265,
				46.77180606, 47.19143291, 47.61104318, 48.03063683, 48.45021383, 48.86977414, 49.28931774, 49.70884458,
				50.12835464, 50.54784789, 50.96732429, 51.38678381, 51.80622643, 52.22565211, 52.64506082, 53.06445253,
				53.48382722, 53.90318484, 54.32252538, 54.74184881, 55.16115508, 55.58044419, 55.99971609, 56.41897077,
				56.83820818, 57.25742831, 57.67663113, 58.09581661, 58.51498472, 58.93413544, 59.35326873, 59.77238458,
				60.19148296, 60.61056384, 61.02962719, 61.44867299, 61.86770121, 62.28671183, 62.70570483, 63.12468017,
				63.54363784, 63.9625778, 64.38150004, 64.80040452, 65.21929123, 65.63816015, 66.05701124, 66.47584448,
				66.89465985, 67.31345733, 67.73223689, 68.1509985, 68.56974216, 68.98846782, 69.40717548, 69.82586511,
				70.24453668, 70.66319017, 71.08182556, 71.50044283, 71.91904195, 72.33762291, 72.75618568, 73.17473024,
				73.59325657, 74.01176465, 74.43025445, 74.84872595, 75.26717914, 75.68561398, 76.10403047, 76.52242858,
				76.94080829, 77.35916957, 77.77751242, 78.1958368, 78.6141427, 79.03243009, 79.45069896, 79.86894928,
				80.28718105, 80.70539422, 81.1235888, 81.54176475, 81.95992206, 82.3780607, 82.79618067, 83.21428193,
				83.63236447, 84.05042827, 84.46847331, 84.88649957, 85.30450704, 85.72249569, 86.1404655, 86.55841647,
				86.97634855, 87.39426175, 87.81215604, 88.2300314, 88.64788782, 89.06572527, 89.48354374, 89.9013432,
				90.31912365, 90.73688506, 91.15462742, 91.57235071, 91.9900549, 92.40773999, 92.82540595, 93.24305276,
				93.66068042, 94.0782889, 94.49587818, 94.91344825, 95.33099909, 95.74853069, 96.16604302, 96.58353606,
				97.00100981, 97.41846425, 97.83589935, 98.2533151, 98.67071149, 99.0880885, 99.50544611, 99.9227843,
				100.3401031, 100.7574024, 101.1746822, 101.5919426, 102.0091834, 102.4264048, 102.8436066, 103.2607889,
				103.6779516, 104.0950948, 104.5122183, 104.9293222, 105.3464066, 105.7634712, 106.1805162, 106.5975416,
				107.0145472, 107.4315332, 107.8484994, 108.2654459, 108.6823726, 109.0992796, 109.5161668, 109.9330342,
				110.3498818, 110.7667096, 111.1835175, 111.6003055, 112.0170737, 112.433822, 112.8505504, 113.2672589,
				113.6839475, 114.1006161, 114.5172647, 114.9338934, 115.3505021, 115.7670908, 116.1836594, 116.600208,
				117.0167366, 117.4332451, 117.8497336, 118.2662019, 118.6826501, 119.0990783, 119.5154862, 119.9318741,
				120.3482417, 120.7645892, 121.1809165, 121.5972236, 122.0135105, 122.4297771, 122.8460235, 123.2622496,
				123.6784555, 124.0946411, 124.5108063, 124.9269513, 125.3430759, 125.7591802, 126.1752641, 126.5913276,
				127.0073708, 127.4233935, 127.8393959, 128.2553778, 128.6713393, 129.0872803, 129.5032009, 129.919101,
				130.3349806, 130.7508397, 131.1666783, 131.5824963, 131.9982938, 132.4140708, 132.8298272, 133.245563,
				133.6612782, 134.0769727, 134.4926467, 134.9083, 135.3239327, 135.7395447, 136.1551361, 136.5707067,
				136.9862567, 137.401786, 137.8172945, 138.2327823, 138.6482493, 139.0636956, 139.4791211, 139.8945258,
				140.3099097, 140.7252728, 141.1406151, 141.5559365, 141.9712371, 142.3865169, 142.8017757, 143.2170137,
				143.6322308, 144.0474269, 144.4626022, 144.8777565, 145.2928898, 145.7080022, 146.1230936, 146.5381641,
				146.9532135, 147.368242, 147.7832494, 148.1982358, 148.6132011, 149.0281454, 149.4430686, 149.8579708,
				150.2728519, 150.6877118, 151.1025506, 151.5173684, 151.9321649, 152.3469404, 152.7616946, 153.1764277,
				153.5911396, 154.0058303, 154.4204999, 154.8351481, 155.2497752, 155.664381, 156.0789656, 156.4935289,
				156.9080709, 157.3225917, 157.7370911, 158.1515692, 158.566026, 158.9804615, 159.3948757, 159.8092684,
				160.2236399, 160.6379899, 161.0523185, 161.4666258, 161.8809116, 162.2951761, 162.709419, 163.1236406,
				163.5378407, 163.9520193, 164.3661764, 164.7803121, 165.1944263, 165.6085189, 166.02259, 166.4366396,
				166.8506677, 167.2646742, 167.6786592, 168.0926225, 168.5065643, 168.9204845, 169.3343831, 169.7482601,
				170.1621154, 170.5759491, 170.9897612, 171.4035515, 171.8173203, 172.2310673, 172.6447927, 173.0584963,
				173.4721783, 173.8858385, 174.299477, 174.7130937, 175.1266887, 175.5402619, 175.9538134, 176.367343,
				176.7808509, 177.194337, 177.6078012, 178.0212436, 178.4346642, 178.8480629, 179.2614398, 179.6747948,
				180.088128, 180.5014392, 180.9147286, 181.327996, 181.7412416, 182.1544652, 182.5676668, 182.9808466,
				183.3940043, 183.8071401, 184.2202539, 184.6333457, 185.0464156, 185.4594634, 185.8724892, 186.285493,
				186.6984747, 187.1114344, 187.524372, 187.9372876, 188.3501811, 188.7630525, 189.1759018, 189.588729,
				190.0015341, 190.4143171, 190.8270779, 191.2398166, 191.6525331, 192.0652275, 192.4778997, 192.8905497,
				193.3031775, 193.7157831, 194.1283665, 194.5409277, 194.9534667, 195.3659834, 195.7784778, 196.19095,
				196.6034, 197.0158276, 197.428233, 197.840616, 198.2529768, 198.6653152, 199.0776314, 199.4899251,
				199.9021966, 200.3144457, 200.7266724, 201.1388767, 201.5510587, 201.9632183, 202.3753555, 202.7874702,
				203.1995626, 203.6116325, 204.02368, 204.4357051, 204.8477076, 205.2596878, 205.6716454, 206.0835806,
				206.4954933, 206.9073834, 207.3192511, 207.7310962, 208.1429189, 208.554719, 208.9664965, 209.3782515,
				209.7899839, 210.2016937, 210.613381, 211.0250457, 211.4366877, 211.8483072, 212.2599041, 212.6714783,
				213.0830299, 213.4945588, 213.9060651, 214.3175487, 214.7290097, 215.140448, 215.5518636, 215.9632565,
				216.3746267, 216.7859741, 217.1972989, 217.6086009, 218.0198802, 218.4311367, 218.8423705, 219.2535815,
				219.6647697, 220.0759352, 220.4870778, 220.8981977, 221.3092947, 221.720369, 222.1314204, 222.5424489,
				222.9534547, 223.3644375, 223.7753975, 224.1863347, 224.5972489, 225.0081403, 225.4190088, 225.8298544,
				226.240677, 226.6514768, 227.0622536, 227.4730075, 227.8837384, 228.2944464, 228.7051314, 229.1157935,
				229.5264325, 229.9370486, 230.3476417, 230.7582118, 231.1687589, 231.5792829, 231.989784, 232.4002619,
				232.8107169, 233.2211488, 233.6315576, 234.0419434, 234.452306, 234.8626456, 235.2729621, 235.6832555,
				236.0935258, 236.503773, 236.913997, 237.3241979, 237.7343757, 238.1445303, 238.5546618, 238.96477,
				239.3748552, 239.7849171, 240.1949558, 240.6049713, 241.0149637, 241.4249328, 241.8348787, 242.2448013,
				242.6547007, 243.0645769, 243.4744298, 243.8842595, 244.2940659, 244.703849, 245.1136088, 245.5233453,
				245.9330585, 246.3427484, 246.752415, 247.1620583, 247.5716782, 247.9812748, 248.390848, 248.8003979,
				249.2099244, 249.6194275, 250.0289073, 250.4383636, 250.8477966, 251.2572062, 251.6665923, 252.075955,
				252.4852943, 252.8946102, 253.3039026, 253.7131716, 254.1224171, 254.5316392, 254.9408378, 255.3500129,
				255.7591645, 256.1682926, 256.5773972, 256.9864783, 257.3955358, 257.8045699, 258.2135804, 258.6225674,
				259.0315308, 259.4404706, 259.8493869, 260.2582797, 260.6671488, 261.0759944, 261.4848163, 261.8936147,
				262.3023894, 262.7111406, 263.1198681, 263.5285719, 263.9372522, 264.3459088, 264.7545417, 265.163151,
				265.5717366, 265.9802985, 266.3888367, 266.7973513, 267.2058421, 267.6143093, 268.0227527, 268.4311724,
				268.8395684, 269.2479406, 269.6562891, 270.0646139, 270.4729149, 270.8811921, 271.2894456, 271.6976752,
				272.1058811, 272.5140632, 272.9222215, 273.330356, 273.7384667, 274.1465535, 274.5546165, 274.9626557,
				275.370671, 275.7786625, 276.1866302, 276.5945739, 277.0024938, 277.4103898, 277.8182619, 278.2261101,
				278.6339345, 279.0417349, 279.4495114, 279.8572639, 280.2649926, 280.6726973, 281.080378, 281.4880348,
				281.8956677, 282.3032766, 282.7108615, 283.1184224, 283.5259594, 283.9334723, 284.3409613, 284.7484262,
				285.1558671, 285.563284, 285.9706769, 286.3780458, 286.7853906, 287.1927113, 287.600008, 288.0072806,
				288.4145292, 288.8217537, 289.2289541, 289.6361304, 290.0432826, 290.4504107, 290.8575147, 291.2645946,
				291.6716503, 292.078682, 292.4856894, 292.8926728, 293.299632, 293.706567, 294.1134778, 294.5203645,
				294.927227, 295.3340653, 295.7408795, 296.1476694, 296.5544351, 296.9611766, 297.3678939, 297.7745869,
				298.1812557, 298.5879003, 298.9945206, 299.4011167, 299.8076885, 300.2142361, 300.6207594, 301.0272583,
				301.433733, 301.8401835, 302.2466096, 302.6530114, 303.0593889, 303.465742, 303.8720709, 304.2783754,
				304.6846555, 305.0909113, 305.4971428, 305.9033499, 306.3095326, 306.715691, 307.121825, 307.5279346,
				307.9340197, 308.3400805, 308.7461169, 309.1521289, 309.5581165, 309.9640796, 310.3700183, 310.7759326,
				311.1818224, 311.5876877, 311.9935286, 312.3993451, 312.805137, 313.2109045, 313.6166475, 314.022366,
				314.42806, 314.8337295, 315.2393745, 315.644995, 316.050591, 316.4561624, 316.8617093, 317.2672316,
				317.6727294, 318.0782027, 318.4836514, 318.8890755, 319.294475, 319.69985, 320.1052004, 320.5105261,
				320.9158273, 321.3211039, 321.7263558, 322.1315832, 322.5367859, 322.941964, 323.3471174, 323.7522462,
				324.1573504, 324.5624299, 324.9674847, 325.3725148, 325.7775203, 326.1825011, 326.5874572, 326.9923887,
				327.3972954, 327.8021774, 328.2070347, 328.6118673, 329.0166751, 329.4214582, 329.8262166, 330.2309503,
				330.6356592, 331.0403433, 331.4450027, 331.8496373, 332.2542471, 332.6588321, 333.0633924, 333.4679279,
				333.8724385, 334.2769244, 334.6813854, 335.0858217, 335.4902331, 335.8946196, 336.2989814, 336.7033183,
				337.1076303, 337.5119175, 337.9161798, 338.3204173, 338.7246299, 339.1288176, 339.5329804, 339.9371184,
				340.3412314, 340.7453195, 341.1493828, 341.5534211, 341.9574345, 342.3614229, 342.7653864, 343.169325,
				343.5732387, 343.9771274, 344.3809911, 344.7848299, 345.1886437, 345.5924325, 345.9961963, 346.3999352,
				346.8036491, 347.2073379, 347.6110018, 348.0146407, 348.4182545, 348.8218433, 349.2254071, 349.6289458,
				350.0324595, 350.4359482, 350.8394118, 351.2428503, 351.6462638, 352.0496523, 352.4530156, 352.8563538,
				353.259667, 353.6629551, 354.0662181, 354.4694559, 354.8726687, 355.2758563, 355.6790189, 356.0821563,
				356.4852685, 356.8883556, 357.2914176, 357.6944544, 358.0974661, 358.5004526, 358.9034139, 359.3063501,
				359.7092611, 360.1121468, 360.5150074, 360.9178428, 361.320653, 361.723438, 362.1261978, 362.5289323,
				362.9316417, 363.3343257, 363.7369846, 364.1396182, 364.5422266, 364.9448097, 365.3473675, 365.7499001,
				366.1524074, 366.5548894, 366.9573461, 367.3597776, 367.7621837, 368.1645646, 368.5669201, 368.9692504,
				369.3715553, 369.7738349, 370.1760891, 370.5783181, 370.9805217, 371.3826999, 371.7848528, 372.1869803,
				372.5890825, 372.9911593, 373.3932107, 373.7952368, 374.1972374, 374.5992127, 375.0011626, 375.4030871,
				375.8049861, 376.2068598, 376.608708, 377.0105308, 377.4123282, 377.8141001, 378.2158466, 378.6175677,
				379.0192633, 379.4209334, 379.8225781, 380.2241973, 380.6257911, 381.0273594, 381.4289021, 381.8304194,
				382.2319112, 382.6333775, 383.0348183, 383.4362335, 383.8376233, 384.2389875, 384.6403262, 385.0416394,
				385.442927, 385.8441891, 386.2454256, 386.6466366, 387.047822, 387.4489818, 387.8501161, 388.2512248,
				388.6523079, 389.0533654, 389.4543973, 389.8554036, 390.2563844, 390.6573395, 391.058269, 391.4591728,
				391.8600511, 392.2609037, 392.6617307, 393.062532, 393.4633077, 393.8640577, 394.2647821, 394.6654808,
				395.0661538, 395.4668012, 395.8674229, 396.2680189, 396.6685892, 397.0691338, 397.4696527, 397.8701459,
				398.2706134, 398.6710551, 399.0714712, 399.4718615, 399.8722261, 400.2725649, 400.672878, 401.0731654,
				401.473427, 401.8736628, 402.2738729, 402.6740572, 403.0742157, 403.4743485, 403.8744554, 404.2745366,
				404.674592, 405.0746215, 405.4746253, 405.8746032, 406.2745554, 406.6744817, 407.0743822, 407.4742568,
				407.8741056, 408.2739286, 408.6737257, 409.073497, 409.4732424, 409.8729619, 410.2726556, 410.6723234,
				411.0719653, 411.4715813, 411.8711715, 412.2707357, 412.6702741, 413.0697865, 413.469273, 413.8687336,
				414.2681683, 414.6675771, 415.0669599, 415.4663168, 415.8656478, 416.2649528, 416.6642318, 417.0634849,
				417.462712, 417.8619132, 418.2610884, 418.6602376, 419.0593608, 419.4584581, 419.8575293, 420.2565746,
				420.6555938, 421.0545871, 421.4535543, 421.8524955, 422.2514107, 422.6502999, 423.049163, 423.4480001,
				423.8468111, 424.2455961, 424.6443551, 425.0430879, 425.4417948, 425.8404755, 426.2391302, 426.6377588,
				427.0363613, 427.4349377, 427.8334881, 428.2320123, 428.6305104, 429.0289824, 429.4274283, 429.8258481,
				430.2242418, 430.6226093, 431.0209507, 431.419266, 431.8175551, 432.2158181, 432.6140549, 433.0122656,
				433.41045, 433.8086084, 434.2067405, 434.6048465, 435.0029263, 435.4009799, 435.7990073, 436.1970085,
				436.5949835, 436.9929323, 437.3908549, 437.7887513, 438.1866214, 438.5844653, 438.982283, 439.3800745,
				439.7778397, 440.1755786, 440.5732913, 440.9709778, 441.368638, 441.7662719, 442.1638795, 442.5614609,
				442.959016, 443.3565448, 443.7540473, 444.1515235, 444.5489734, 444.9463971, 445.3437944, 445.7411653,
				446.13851, 446.5358283, 446.9331204, 447.330386, 447.7276254, 448.1248384, 448.522025, 448.9191853,
				449.3163192, 449.7134268, 450.110508, 450.5075628, 450.9045912, 451.3015933, 451.698569, 452.0955183,
				452.4924412, 452.8893376, 453.2862077, 453.6830514, 454.0798686, 454.4766595, 454.8734239, 455.2701618,
				455.6668734, 456.0635585, 456.4602171, 456.8568493, 457.2534551, 457.6500344, 458.0465872, 458.4431135,
				458.8396134, 459.2360868, 459.6325337, 460.0289542, 460.4253481, 460.8217156, 461.2180565, 461.614371,
				462.0106589, 462.4069203, 462.8031552, 463.1993636, 463.5955454, 463.9917007, 464.3878295, 464.7839317,
				465.1800073, 465.5760565, 465.972079, 466.368075, 466.7640445, 467.1599873, 467.5559036, 467.9517933,
				468.3476564, 468.7434929, 469.1393029, 469.5350862, 469.9308429, 470.3265731, 470.7222766, 471.1179534,
				471.5136037, 471.9092273, 472.3048244, 472.7003947, 473.0959384, 473.4914555, 473.886946, 474.2824097,
				474.6778469, 475.0732573, 475.4686411, 475.8639982, 476.2593286, 476.6546324, 477.0499094, 477.4451598,
				477.8403835, 478.2355805, 478.6307507, 479.0258943, 479.4210111, 479.8161013, 480.2111647, 480.6062013,
				481.0012113, 481.3961945, 481.7911509, 482.1860806, 482.5809836, 482.9758598, 483.3707093, 483.7655319,
				484.1603279, 484.555097, 484.9498394, 485.3445549, 485.7392437, 486.1339057, 486.528541, 486.9231494,
				487.317731, 487.7122857, 488.1068137, 488.5013149, 488.8957892, 489.2902367, 489.6846574, 490.0790512,
				490.4734182, 490.8677584, 491.2620717, 491.6563581, 492.0506177, 492.4448505, 492.8390563, 493.2332353,
				493.6273874, 494.0215126, 494.415611, 494.8096824, 495.203727, 495.5977447, 495.9917354, 496.3856993,
				496.7796362, 497.1735462, 497.5674293, 497.9612855, 498.3551148, 498.7489171, 499.1426924, 499.5364409,
				499.9301624, 500.3238569, 500.7175245, 501.1111651, 501.5047787, 501.8983654, 502.2919251, 502.6854578,
				503.0789636, 503.4724423, 503.8658941, 504.2593189, 504.6527166, 505.0460874, 505.4394312, 505.8327479,
				506.2260376, 506.6193003, 507.012536, 507.4057447, 507.7989263, 508.1920809, 508.5852084, 508.9783089,
				509.3713823, 509.7644287, 510.157448, 510.5504402, 510.9434054, 511.3363435, 511.7292546, 512.1221385,
				512.5149954, 512.9078251, 513.3006278, 513.6934034, 514.0861518, 514.4788732, 514.8715674, 515.2642346,
				515.6568746, 516.0494875, 516.4420732, 516.8346318, 517.2271633, 517.6196677, 518.0121448, 518.4045949,
				518.7970178, 519.1894135, 519.5817821, 519.9741234, 520.3664377, 520.7587247, 521.1509846, 521.5432173,
				521.9354227, 522.327601, 522.7197521, 523.111876, 523.5039727, 523.8960422, 524.2880845, 524.6800995,
				525.0720873, 525.4640479, 525.8559813, 526.2478874, 526.6397663, 527.0316179, 527.4234423, 527.8152394,
				528.2070093, 528.5987519, 528.9904673, 529.3821554, 529.7738162, 530.1654497, 530.557056, 530.9486349,
				531.3401866, 531.731711, 532.1232081, 532.5146778, 532.9061203, 533.2975355, 533.6889233, 534.0802838,
				534.471617, 534.8629229, 535.2542014, 535.6454526, 536.0366765, 536.427873, 536.8190422, 537.210184,
				537.6012984, 537.9923855, 538.3834453, 538.7744776, 539.1654826, 539.5564602, 539.9474104, 540.3383333,
				540.7292287, 541.1200968, 541.5109374, 541.9017507, 542.2925365, 542.683295, 543.074026, 543.4647296,
				543.8554058, 544.2460545, 544.6366758, 545.0272697, 545.4178362, 545.8083752, 546.1988867, 546.5893708,
				546.9798275, 547.3702567, 547.7606584, 548.1510326, 548.5413794, 548.9316987, 549.3219905, 549.7122549,
				550.1024917, 550.4927011, 550.8828829, 551.2730373, 551.6631642, 552.0532635, 552.4433353, 552.8333797,
				553.2233965, 553.6133857, 554.0033475, 554.3932817, 554.7831883, 555.1730675, 555.5629191, 555.9527431,
				556.3425396, 556.7323085, 557.1220499, 557.5117637, 557.9014499, 558.2911085, 558.6807396, 559.0703431,
				559.459919, 559.8494673, 560.2389881, 560.6284812, 561.0179467, 561.4073847, 561.796795, 562.1861777,
				562.5755328, 562.9648602, 563.3541601, 563.7434323, 564.1326768, 564.5218938, 564.9110831, 565.3002447,
				565.6893787, 566.0784851, 566.4675638, 566.8566148, 567.2456382, 567.6346338, 568.0236019, 568.4125422,
				568.8014549, 569.1903399, 569.5791971, 569.9680267, 570.3568286, 570.7456028, 571.1343493, 571.5230681,
				571.9117592, 572.3004226, 572.6890582, 573.0776661, 573.4662463, 573.8547988, 574.2433235, 574.6318204,
				575.0202897, 575.4087312, 575.7971449, 576.1855309, 576.5738891, 576.9622195, 577.3505222, 577.7387972,
				578.1270443, 578.5152637, 578.9034552, 579.291619, 579.679755, 580.0678632, 580.4559436, 580.8439963,
				581.2320211, 581.620018, 582.0079872, 582.3959286, 582.7838421, 583.1717278, 583.5595857, 583.9474157,
				584.335218, 584.7229923, 585.1107389, 585.4984575, 585.8861483, 586.2738113, 586.6614464, 587.0490537,
				587.436633, 587.8241845, 588.2117082, 588.5992039, 588.9866718, 589.3741117, 589.7615238, 590.148908,
				590.5362643, 590.9235927, 591.3108932, 591.6981657, 592.0854104, 592.4726271, 592.859816, 593.2469768,
				593.6341098, 594.0212148, 594.4082919, 594.7953411, 595.1823623, 595.5693555, 595.9563209, 596.3432582,
				596.7301676, 597.117049, 597.5039025, 597.890728, 598.2775255, 598.664295, 599.0510366, 599.4377501,
				599.8244357, 600.2110933, 600.5977229, 600.9843244, 601.370898, 601.7574436, 602.1439611, 602.5304507,
				602.9169122, 603.3033457, 603.6897512, 604.0761286, 604.462478, 604.8487993, 605.2350927, 605.6213579,
				606.0075952, 606.3938043, 606.7799854, 607.1661385, 607.5522635, 607.9383604, 608.3244292, 608.71047,
				609.0964826, 609.4824672, 609.8684238, 610.2543522, 610.6402525, 611.0261247, 611.4119688, 611.7977849,
				612.1835728, 612.5693326, 612.9550642, 613.3407678, 613.7264432, 614.1120905, 614.4977097, 614.8833007,
				615.2688636, 615.6543984, 616.039905, 616.4253834, 616.8108337, 617.1962558, 617.5816498, 617.9670156,
				618.3523533, 618.7376627, 619.122944, 619.5081971, 619.8934221, 620.2786188, 620.6637873, 621.0489277,
				621.4340398, 621.8191238, 622.2041795, 622.5892071, 622.9742064, 623.3591775, 623.7441204, 624.1290351,
				624.5139215, 624.8987797, 625.2836097, 625.6684114, 626.0531849, 626.4379301, 626.8226471, 627.2073358,
				627.5919963, 627.9766285, 628.3612325, 628.7458082, 629.1303556, 629.5148747, 629.8993656, 630.2838281,
				630.6682624, 631.0526684, 631.4370461, 631.8213955, 632.2057166, 632.5900094, 632.9742739, 633.3585101,
				633.742718, 634.1268975, 634.5110488, 634.8951717, 635.2792662, 635.6633325, 636.0473704, 636.4313799,
				636.8153612, 637.199314, 637.5832386, 637.9671347, 638.3510025, 638.734842, 639.118653, 639.5024358,
				639.8861901, 640.2699161, 640.6536136, 641.0372828, 641.4209236, 641.8045361, 642.1881201, 642.5716757,
				642.9552029, 643.3387018, 643.7221722, 644.1056142, 644.4890278, 644.8724129, 645.2557697, 645.639098,
				646.0223979, 646.4056693, 646.7889124, 647.1721269, 647.5553131, 647.9384707, 648.3216, 648.7047008,
				649.0877731, 649.4708169, 649.8538323, 650.2368193, 650.6197777, 651.0027077, 651.3856092, 651.7684822,
				652.1513268, 652.5341428, 652.9169303, 653.2996894, 653.6824199, 654.065122, 654.4477955, 654.8304406,
				655.2130571, 655.5956451, 655.9782045, 656.3607355, 656.7432379, 657.1257118, 657.5081572, 657.890574,
				658.2729622, 658.655322, 659.0376531, 659.4199558, 659.8022298, 660.1844753, 660.5666923, 660.9488807,
				661.3310405, 661.7131717, 662.0952744, 662.4773484, 662.8593939, 663.2414108, 663.6233991, 664.0053588,
				664.38729, 664.7691925, 665.1510664, 665.5329117, 665.9147284, 666.2965165, 666.6782759, 667.0600068,
				667.441709, 667.8233825, 668.2050275, 668.5866438, 668.9682315, 669.3497905, 669.7313209, 670.1128226,
				670.4942957, 670.8757401, 671.2571559, 671.638543, 672.0199014, 672.4012311, 672.7825322, 673.1638046,
				673.5450484, 673.9262634, 674.3074497, 674.6886074, 675.0697364, 675.4508366, 675.8319082, 676.2129511,
				676.5939652, 676.9749507, 677.3559074, 677.7368354, 678.1177347, 678.4986053, 678.8794471, 679.2602602,
				679.6410446, 680.0218002, 680.4025271, 680.7832252, 681.1638946, 681.5445352, 681.9251471, 682.3057302,
				682.6862846, 683.0668102, 683.447307, 683.827775, 684.2082143, 684.5886248, 684.9690065, 685.3493594,
				685.7296836, 686.1099789, 686.4902455, 686.8704832, 687.2506921, 687.6308723, 688.0110236, 688.3911461,
				688.7712398, 689.1513047, 689.5313407, 689.911348, 690.2913263, 690.6712759, 691.0511966, 691.4310885,
				691.8109515, 692.1907857, 692.5705911, 692.9503676, 693.3301152, 693.709834, 694.0895239, 694.4691849,
				694.8488171, 695.2284204, 695.6079948, 695.9875403, 696.367057, 696.7465448, 697.1260036, 697.5054336,
				697.8848347, 698.2642069, 698.6435502, 699.0228645, 699.40215, 699.7814065, 700.1606342, 700.5398329,
				700.9190027, 701.2981435, 701.6772555, 702.0563385, 702.4353925, 702.8144177, 703.1934138, 703.5723811,
				703.9513193, 704.3302287, 704.709109, 705.0879605, 705.4667829, 705.8455764, 706.2243409, 706.6030764,
				706.981783, 707.3604606, 707.7391092, 708.1177288, 708.4963194, 708.874881, 709.2534137, 709.6319173,
				710.0103919, 710.3888375, 710.7672542, 711.1456418, 711.5240004, 711.9023299, 712.2806305, 712.658902,
				713.0371445, 713.4153579, 713.7935424, 714.1716977, 714.5498241, 714.9279214, 715.3059896, 715.6840288,
				716.062039, 716.44002, 716.8179721, 717.195895, 717.5737889, 717.9516537, 718.3294895, 718.7072961,
				719.0850737, 719.4628222, 719.8405416, 720.218232, 720.5958932, 720.9735253, 721.3511283, 721.7287023,
				722.1062471, 722.4837628, 722.8612494, 723.2387069, 723.6161352, 723.9935345, 724.3709046, 724.7482456,
				725.1255574, 725.5028401, 725.8800937, 726.2573181, 726.6345134, 727.0116795, 727.3888165, 727.7659243,
				728.143003, 728.5200525, 728.8970729, 729.274064, 729.651026, 730.0279589, 730.4048625, 730.781737,
				731.1585823, 731.5353984, 731.9121853, 732.288943, 732.6656715, 733.0423708, 733.419041, 733.7956819,
				734.1722936, 734.5488761, 734.9254293, 735.3019534, 735.6784482, 736.0549138, 736.4313502, 736.8077573,
				737.1841352, 737.5604839, 737.9368033, 738.3130935, 738.6893544, 739.0655861, 739.4417886, 739.8179617,
				740.1941056, 740.5702203, 740.9463057, 741.3223618, 741.6983886, 742.0743862, 742.4503545, 742.8262935,
				743.2022032, 743.5780836, 743.9539347, 744.3297566, 744.7055491, 745.0813124, 745.4570463, 745.8327509,
				746.2084262, 746.5840722, 746.9596889, 747.3352763, 747.7108343, 748.0863631, 748.4618624, 748.8373325,
				749.2127732, 749.5881846, 749.9635666, 750.3389193, 750.7142426, 751.0895366, 751.4648013, 751.8400365,
				752.2152425, 752.590419, 752.9655662, 753.340684, 753.7157725, 754.0908315, 754.4658612, 754.8408615,
				755.2158324, 755.5907739, 755.9656861, 756.3405688, 756.7154222, 757.0902461, 757.4650406, 757.8398058,
				758.2145415, 758.5892478, 758.9639247, 759.3385721, 759.7131902, 760.0877788, 760.462338, 760.8368677,
				761.211368, 761.5858389, 761.9602804, 762.3346924, 762.7090749, 763.083428, 763.4577516, 763.8320458,
				764.2063105, 764.5805458, 764.9547516, 765.3289279, 765.7030748, 766.0771921, 766.45128, 766.8253385,
				767.1993674, 767.5733668, 767.9473368, 768.3212772, 768.6951882, 769.0690697, 769.4429216, 769.8167441,
				770.190537, 770.5643004, 770.9380344, 771.3117388, 771.6854136, 772.059059, 772.4326748, 772.8062611,
				773.1798178, 773.5533451, 773.9268427, 774.3003109, 774.6737495, 775.0471585, 775.420538, 775.7938879,
				776.1672083, 776.5404991, 776.9137604, 777.2869921, 777.6601942, 778.0333667, 778.4065097, 778.7796231,
				779.1527069, 779.5257611, 779.8987857, 780.2717808, 780.6447462, 781.0176821, 781.3905883, 781.763465,
				782.136312, 782.5091294, 782.8819172, 783.2546754, 783.627404, 784.000103, 784.3727723, 784.745412,
				785.1180221, 785.4906025, 785.8631533, 786.2356745, 786.608166, 786.9806279, 787.3530601, 787.7254627,
				788.0978356, 788.4701789, 788.8424925, 789.2147764, 789.5870307, 789.9592553, 790.3314502, 790.7036155,
				791.0757511, 791.447857, 791.8199332, 792.1919797, 792.5639965, 792.9359837, 793.3079411, 793.6798688,
				794.0517669, 794.4236352, 794.7954738, 795.1672828, 795.539062, 795.9108114, 796.2825312, 796.6542212,
				797.0258815, 797.3975121, 797.769113, 798.1406841, 798.5122255, 798.8837371, 799.255219, 799.6266711,
				799.9980935, 800.3694862, 800.7408491, 801.1121822, 801.4834856, 801.8547592, 802.226003, 802.5972171,
				802.9684013, 803.3395558, 803.7106806, 804.0817755, 804.4528407, 804.8238761, 805.1948817, 805.5658574,
				805.9368034, 806.3077196, 806.678606, 807.0494626, 807.4202894, 807.7910863, 808.1618535, 808.5325908,
				808.9032983, 809.273976, 809.6446239, 810.0152419, 810.3858301, 810.7563884, 811.126917, 811.4974156,
				811.8678845, 812.2383235, 812.6087326, 812.9791119, 813.3494613, 813.7197809, 814.0900706, 814.4603304,
				814.8305604, 815.2007605, 815.5709308, 815.9410711, 816.3111816, 816.6812622, 817.0513129, 817.4213337,
				817.7913247, 818.1612857, 818.5312168, 818.9011181, 819.2709894, 819.6408309, 820.0106424, 820.380424,
				820.7501757, 821.1198975, 821.4895893, 821.8592513, 822.2288833, 822.5984854, 822.9680575, 823.3375998,
				823.707112, 824.0765944, 824.4460468, 824.8154692, 825.1848618, 825.5542243, 825.9235569, 826.2928596,
				826.6621322, 827.031375, 827.4005877, 827.7697705, 828.1389233, 828.5080461, 828.877139, 829.2462019,
				829.6152348, 829.9842377, 830.3532106, 830.7221536, 831.0910665, 831.4599494, 831.8288024, 832.1976253,
				832.5664182, 832.9351811, 833.3039141, 833.6726169, 834.0412898, 834.4099327, 834.7785455, 835.1471283,
				835.5156811, 835.8842038, 836.2526965, 836.6211592, 836.9895918, 837.3579944, 837.726367, 838.0947095,
				838.4630219, 838.8313043, 839.1995566, 839.5677789, 839.9359711, 840.3041332, 840.6722653, 841.0403673,
				841.4084392, 841.7764811, 842.1444929, 842.5124745, 842.8804261, 843.2483477, 843.6162391, 843.9841004,
				844.3519316, 844.7197327, 845.0875038, 845.4552447, 845.8229555, 846.1906362, 846.5582868, 846.9259073,
				847.2934976, 847.6610578, 848.0285879, 848.3960879, 848.7635577, 849.1309974, 849.498407, 849.8657864,
				850.2331357, 850.6004549, 850.9677439, 851.3350027, 851.7022314, 852.0694299, 852.4365983, 852.8037365,
				853.1708446, 853.5379225, 853.9049702, 854.2719877, 854.6389751, 855.0059323, 855.3728593, 855.7397561,
				856.1066227, 856.4734592, 856.8402654, 857.2070415, 857.5737873, 857.940503, 858.3071884, 858.6738437,
				859.0404687, 859.4070635, 859.7736281, 860.1401625, 860.5066667, 860.8731406, 861.2395844, 861.6059979,
				861.9723811, 862.3387341, 862.7050569, 863.0713495, 863.4376118, 863.8038438, 864.1700457, 864.5362172,
				864.9023585, 865.2684696, 865.6345504, 866.0006009, 866.3666212, 866.7326112, 867.0985709, 867.4645003,
				867.8303995, 868.1962684, 868.562107, 868.9279154, 869.2936934, 869.6594412, 870.0251586, 870.3908458,
				870.7565027 };

		Function<Integer, Double> pn2 = k -> {
			// --------------------старая функция
			// предпочтения-------------------------------
			if (d_pn2.length > k)
				return d_pn2[k];
			return 0.;

		};
		double[] k1 = new double[] { 0, 0.462288694, 0.47909131, 0.046886906, 0.002218679, 0.000182756, 0.000191813,
				0.000118077, 0, 0, 0, 0.000375457, 0, 0.000573497, 0, 0.000680563, 1.07014E-05, 1.95714E-07,
				0.000234016, 0.004628309, 0.002519029 };

		double[] k2 = new double[] { 0, 0.096141751, 0.345651629, 0.461546809, 0.000546292, 0.014986554, 0.019370681,
				0.003498886, 0.008485904, 0.012379725, 0.003750504, 0.002131202, 0.00654385, 0.001643734, 0.001822613,
				0.002051362, 0.000908431, 0.000400064, 0.000225045, 0.00699158, 0.010923389 };
		// Graph<Integer, Integer> g = genereateDonkeyShrekGraph(rnDood1, rnDood2, pn2,
		// 0.04096, 1, N);
		// Graph<Integer, Integer> g = genereateDonkeyShrekGraph(rnDood1, rnDood2, pn2,
		// 0.0, 1, N);
		GraphGenerator<Integer, Integer> gn = new StohIncrementNPAGenerator(graphFactory,
				Statistics.createIntegerFactory(), Statistics.createIntegerFactory(), k1, k2, pn2, 0., 1., N);
		return gn.create();
		// return g;
	}

	private static Graph<Integer, Integer> getNPAGraph(int N) {
		double[] d_pn2 = { 0, 0.03703408, 0.022214717, 0.038200661, 0.0010, 4.0733, 5.352096781, 6.244112912,
				7.136129042, 8.028145172, 8.920161302, 9.812177433, 10.70419356, 11.59620969, 12.48822582, 13.38024195,
				14.27225808, 15.16427421, 16.05629034, 16.94830647, 17.8403226, 18.73233873, 19.62435487, 20.516371,
				21.40838713, 22.30040326, 23.19241939, 24.08443552, 24.97645165, 25.86846778, 26.76048391, 27.65250004,
				28.54451617, 29.4365323, 30.32854843, 31.22056456, 32.11258069, 33.00459682, 33.89661295, 34.78862908,
				35.68064521, 36.57266134, 37.46467747, 38.3566936, 39.24870973, 40.14072586, 41.03274199, 41.92475812,
				42.81677425, 43.70879038, 44.60080651, 45.49282264, 46.38483877, 47.2768549, 48.16887103, 49.06088716,
				49.95290329, 50.84491942, 51.73693555, 52.62895168, 53.52096781, 54.41298394, 55.30500007, 56.1970162,
				57.08903233, 57.98104847, 58.8730646, 59.76508073, 60.65709686, 61.54911299, 62.44112912, 63.33314525,
				64.22516138, 65.11717751, 66.00919364, 66.90120977, 67.7932259, 68.68524203, 69.57725816, 70.46927429,
				71.36129042, 72.25330655, 73.14532268, 74.03733881, 74.92935494, 75.82137107, 76.7133872, 77.60540333,
				78.49741946, 79.38943559, 80.28145172, 81.17346785, 82.06548398, 82.95750011, 83.84951624, 84.74153237,
				85.6335485, 86.52556463, 87.41758076, 88.30959689, 89.20161302 };
		Function<Integer, Double> pn2 = k -> {
			// --------------------старая функция
			// предпочтения-------------------------------
			if (d_pn2.length > k)
				return d_pn2[k];
			return (0.892 * k * k);

		};
		double[] r_h5 = new double[] { 0, 0.354093776, 0.419194964, 0.090949197, 0.035086452, 0.10067565 };
		GraphGenerator<Integer, Integer> gn = new PAGenerator(graphFactory, Statistics.createIntegerFactory(),
				Statistics.createIntegerFactory(), r_h5, pn2, N);
		return gn.create();
	}

	public static void main(String[] args) throws IOException {
	
	
	 if(args.length>0&&args[0].equals("visBA")){
		 AddNodeBADemo.main(null);
		 return;
	 }
	 else if(args.length>0&&args[0].equals("visNPA")){
		AddNodeStohDemo2.main(null);
		return;
	 }
		
		
		Graph<Integer, Integer> graph;
		// graph = Statistics.loadGraph("graph/myAs.net");
		graph = getNPAGraph_EDC(22963);
		// graph=getNPAGraph(22963);
		// graph=getNPAGraph(22963);
		int[] degrees = Statistics.getNodesDegrees(graph, 30);
		System.out.println("Degree distribution");

		for (int i = 0; i < degrees.length; i++) {
			System.out.println(degrees[i] / (double) graph.getVertexCount());

		}
		int[][] mass = Statistics.getQMatrix(graph, 30);
		File degreeDegreeFile = new File("e_out.txt");
		try (FileWriter writeFile = new FileWriter(degreeDegreeFile)) {
			for (int i = 0; i < mass.length; i++) {
				for (int j = 0; j < mass.length; j++) {
					writeFile.write(String.format("%.8f", mass[i][j] / 2. / (double) graph.getEdgeCount()) + " ");
				}
				writeFile.write("\n");

			}
		} catch (IOException e) {
			LOG.error("Problem with  degree-degree file saving.");
		}

		// временно отладка
		System.out.println("V=" + graph.getVertexCount());
		System.out.println("E=" + graph.getEdgeCount());
		int[] tr = Statistics.getTriAndVilk2(graph);
		System.out.println("m[0]=" + tr[0]);
		System.out.println("m[1]=" + tr[1]);

		System.out.println("C=" + tr[0] * 3. / tr[1]);
		System.out.println("max_k=" + Statistics.getMaxDegree(graph));

	}

}
